# -*- coding: utf-8 -*-

"""
***************************************************************************
*   Korto19 27.08.2022                                                                      *
*   This program is free software; you can redistribute it and/or modify  *
*   it under the terms of the GNU General Public License as published by  *
*   the Free Software Foundation; either version 2 of the License, or     *
*   (at your option) any later version.                                   *
*                                                                         *
***************************************************************************
"""
from PyQt5.QtCore import *
from qgis.PyQt.QtCore import QCoreApplication
from qgis.core import (QgsProject,
                       QgsMapLayerType,
                       QgsProcessingParameterLayout,
                       QgsLayoutItemHtml,
                       QgsProcessingParameterBoolean,
                       QgsProcessingParameterField,
                       QgsProcessingParameterFile,
                       QgsLayoutFrame,
                       QgsLayoutMeasurement,
                       QgsUnitTypes,
                       QgsFields,
                       QgsField,
                       QgsFeature,
                       QgsFeatureRequest,
                       QgsProcessing,
                       QgsFeatureSink,
                       QgsProcessingException,
                       QgsProcessingAlgorithm,
                       QgsProcessingParameterFeatureSource,
                       QgsProcessingParameterFeatureSink)
from qgis import processing
from qgis.PyQt.QtGui import QIcon

from qgis.PyQt.QtGui import QIcon
from PyQt5 import QtGui
from PyQt5 import QtCore
import base64

image_base64 = b'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iNTAwLjMzIiBoZWlnaHQ9IjQ5OS42NSIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgNTEyIDUxMiIgdmVyc2lvbj0iMS4xIiB2aWV3Qm94PSIwIDAgNTAwLjMzIDQ5OS42NSIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48ZGVmcz48bWFya2VyIGlkPSJSb3VuZGVkQXJyb3ciIG92ZXJmbG93PSJ2aXNpYmxlIiBtYXJrZXJIZWlnaHQ9IjUuOTMwNDk1MyIgbWFya2VyV2lkdGg9IjYuMTM0NzUyMyIgb3JpZW50PSJhdXRvLXN0YXJ0LXJldmVyc2UiIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIiB2aWV3Qm94PSIwIDAgNi4xMzQ3NTI0IDUuOTMwNDk1MSI+PHBhdGggdHJhbnNmb3JtPSJzY2FsZSguNykiIGQ9Im0tMC4yMTExNS00LjEwNTYgNi40MjIzIDMuMjExMWExIDEgOTAgMCAxIDAgMS43ODg5bC02LjQyMjMgMy4yMTExYTEuMjM2MSAxLjIzNjEgMzEuNzE3IDAgMS0xLjc4ODktMS4xMDU2di02YTEuMjM2MSAxLjIzNjEgMTQ4LjI4IDAgMSAxLjc4ODktMS4xMDU2eiIgZmlsbD0iY29udGV4dC1zdHJva2UiIGZpbGwtcnVsZT0iZXZlbm9kZCIvPjwvbWFya2VyPjwvZGVmcz4KPHJlY3QgeD0iMjUuNTkzIiB5PSIyNC40NzgiIHdpZHRoPSI0NDguODEiIGhlaWdodD0iNDUwLjI4IiByeT0iMjIuOTI3IiBmaWxsPSIjZmZmIiBzdHJva2U9IiMwMDAiIHN0cm9rZS1saW5lY2FwPSJyb3VuZCIgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIgc3Ryb2tlLXdpZHRoPSIxNS4xMTgiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHN3aXRjaCB0cmFuc2Zvcm09Im1hdHJpeCguMjk3MTUgMCAwIC4yNzUzMSA2Ny4wNzUgMjgxLjQ2KSI+Cgk8Zz4KCQkKCQkJCiA8IS0tIElmIHlvdSB3b3VsZCBsaWtlIHRvIGN1c3RvbWl6ZSB0aGUgY29sb3Igb2YgdGhlIGJhZGdlLCB0aGVzZSB0d28gSFNMIGNvbG9ycyBhcmUgdGhlIHByaW1hcnkgb3JhbmdlcyAtLT4KCQkJCiA8IS0tICBUaGUgc2Vjb25kIG9uZSBuZWVkcyB0byBiZSArNiBodWUsICs5JSBzYXR1cmF0aW9uLCBhbmQgKzMlIGxpZ2h0bmVzcyBvZiB0aGUgZmlyc3QgLS0+CgkJCTxwb2x5Z29uIHBvaW50cz0iMTA3LjY0IDQ3MC44OCA3NC42MzMgMTAwLjYyIDQzNy4zNyAxMDAuNjIgNDA0LjMyIDQ3MC44MiAyNTUuNzggNTEyIiBmaWxsPSIjZTM0ZjI2Ii8+CgkJCTxwb2x5Z29uIHBvaW50cz0iMjU2IDEzMC44OSAyNTYgNDgwLjUyIDM3Ni4wMyA0NDcuMjUgNDA0LjI3IDEzMC44OSIgZmlsbD0iI2VmNjUyOSIvPgoJCQk8ZyBmaWxsPSIjZWJlYmViIj4KCQkJCTxwb2x5Z29uIHBvaW50cz0iMjU2IDE3Ni4zIDI1NS44NCAxNzYuMyAxNDIuMTMgMTc2LjMgMTQzLjIyIDE4OC40OSAxNTQuMzggMzEzLjYzIDI1NiAzMTMuNjMgMjU2IDI2OC4yMiAxOTUuOTEgMjY4LjIyIDE5MS43NiAyMjEuNzIgMjU2IDIyMS43MiIvPgoJCQkJPHBvbHlnb24gcG9pbnRzPSIxNTYuNDEgMzM2LjMzIDE2Mi43NyA0MDcuNjMgMjU1Ljc5IDQzMy40NiAyNTYgNDMzLjQgMjU2IDM4Ni4xNSAyNTUuOCAzODYuMjEgMjA1LjIzIDM3Mi41NSAyMDEuOTkgMzM2LjMzIDE3Ny40MiAzMzYuMzMiLz4KCQkJPC9nPgoJCQkKCQkJCTxwYXRoIGQ9Im0xMDguMzggMGgyMy4wNzd2MjIuOGgyMS4xMXYtMjIuOGgyMy4wNzh2NjkuMDQ0aC0yMy4wNzd2LTIzLjEyaC0yMS4xMXYyMy4xMmgtMjMuMDc3di02OS4wNDR6Ii8+CgkJCQk8cGF0aCBkPSJtMjA1Ljk5IDIyLjg5NmgtMjAuMzE2di0yMi44OTZoNjMuNzJ2MjIuODk2aC0yMC4zMjV2NDYuMTQ4aC0yMy4wNzh2LTQ2LjE0OHoiLz4KCQkJCTxwYXRoIGQ9Im0yNTkuNTEgMGgyNC4wNjNsMTQuODAyIDI0LjI2IDE0Ljc4Ny0yNC4yNmgyNC4wNzJ2NjkuMDQ0aC0yMi45ODJ2LTM0LjIyMmwtMTUuODc3IDI0LjU0OWgtMC4zOTdsLTE1Ljg4OC0yNC41NDl2MzQuMjIyaC0yMi41OHoiLz4KCQkJCTxwYXRoIGQ9Im0zNDguNzIgMGgyMy4wODR2NDYuMjIyaDMyLjQ1M3YyMi44MjJoLTU1LjUzN3oiLz4KCQkJCgkJCTxnIGZpbGw9IiNmZmYiPgoJCQkJPHBvbHlnb24gcG9pbnRzPSIyNTUuODQgMzg2LjE5IDI1NS44NCA0MzMuNDQgMzQ4Ljk0IDQwNy42MyAzNDkuNjIgMzk5Ljk2IDM2MC4yOSAyODAuNDEgMzYxLjQgMjY4LjIyIDM0OS4xNiAyNjguMjIgMjU1Ljg0IDI2OC4yMiAyNTUuODQgMzEzLjYzIDMxMS43NiAzMTMuNjMgMzA2LjQ5IDM3Mi41MiIvPgoJCQkJPHBvbHlnb24gcG9pbnRzPSIzNjUuNTMgMjIxLjcyIDM2Ni40NCAyMTEuNTEgMzY4LjUxIDE4OC40OSAzNjkuNiAxNzYuMyAyNTUuODQgMTc2LjMgMjU1Ljg0IDIwNC41MSAyNTUuODQgMjIxLjYgMjU1Ljg0IDIyMS43MiAzNjUuMzggMjIxLjcyIi8+CgkJCTwvZz4KCQkKCTwvZz4KPC9zd2l0Y2g+PGcgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiPgo8ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtMTc1LC0xODApIiBzdHJva2Utd2lkdGg9IjMuMyI+PHJlY3QgeD0iMjMwIiB5PSIyNTAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNmZDUiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMjMwIiB5PSIyOTAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNmZmYiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMjMwIiB5PSIzMzAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNmZjJhMmEiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMjMwIiB5PSIzNzAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNjOGI3YjciIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMzAwIiB5PSIyNTAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNmZDUiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMzAwIiB5PSIyOTAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNmZmYiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMzAwIiB5PSIzMzAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNmZjJhMmEiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMzAwIiB5PSIzNzAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNjOGI3YjciIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMzcwIiB5PSIyNTAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNmZDUiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMzcwIiB5PSIyOTAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNmZmYiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMzcwIiB5PSIzMzAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNmZjJhMmEiIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PHJlY3QgeD0iMzcwIiB5PSIzNzAiIHdpZHRoPSI3MCIgaGVpZ2h0PSI0MCIgcnk9IjAiIGZpbGw9IiNjOGI3YjciIHN0eWxlPSJwYWludC1vcmRlcjpmaWxsIG1hcmtlcnMgc3Ryb2tlIi8+PC9nPjxnIHRyYW5zZm9ybT0icm90YXRlKDkwLDM0Ny41LDM1Mi41KSIgc3Ryb2tlLXdpZHRoPSIyLjgiPjxyZWN0IHg9IjIzMCIgeT0iMjUwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjZmQ1IiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjIzMCIgeT0iMjkwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjZmZmIiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjIzMCIgeT0iMzMwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjZmYyYTJhIiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjIzMCIgeT0iMzcwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjYzhiN2I3IiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjMwMCIgeT0iMjUwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjZmQ1IiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjMwMCIgeT0iMjkwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjZmZmIiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjMwMCIgeT0iMzMwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjZmYyYTJhIiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjMwMCIgeT0iMzcwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjYzhiN2I3IiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjM3MCIgeT0iMjUwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjZmQ1IiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjM3MCIgeT0iMjkwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjZmZmIiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjM3MCIgeT0iMzMwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjZmYyYTJhIiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjxyZWN0IHg9IjM3MCIgeT0iMzcwIiB3aWR0aD0iNzAiIGhlaWdodD0iNDAiIHJ5PSIwIiBmaWxsPSIjYzhiN2I3IiBzdHlsZT0icGFpbnQtb3JkZXI6ZmlsbCBtYXJrZXJzIHN0cm9rZSIvPjwvZz48cGF0aCBkPSJtMjkwIDE1MGg4MCIgZmlsbD0ibm9uZSIgc3Ryb2tlLXdpZHRoPSIxNSIvPjxwYXRoIGQ9Im0zNzAgMTUwdjcwIiBmaWxsPSJub25lIiBtYXJrZXItZW5kPSJ1cmwoI1JvdW5kZWRBcnJvdykiIHN0cm9rZS13aWR0aD0iMTUiLz48L2c+PC9zdmc+Cg=='
HFCQgis = b''

class TransposeHTML(QgsProcessingAlgorithm):
    """
    This is an example algorithm that takes a vector layer and
    creates a new identical one.

    It is meant to be used as an example of how to create your own
    algorithms and explain methods and variables used to do it. An
    algorithm like this will be available in all elements, and there
    is not need for additional work.

    All Processing algorithms should extend the QgsProcessingAlgorithm
    class.
    """

    # Constants used to refer to parameters and outputs. They will be
    # used when calling the algorithm from another algorithm, or when
    # calling from the QGIS console.

    INPUT   = 'INPUT'
    INPUT_A = 'INPUT_A'
    INPUT_F = 'INPUT_F'
    INPUT_L = 'INPUT_L'
    INPUT_C = 'INPUT_C'
    OUTPUT  = 'OUTPUT'

    def tr(self, string):
        """
        Returns a translatable string with the self.tr() function.
        """
        return QCoreApplication.translate('Processing', string)

    #icona dell'algoritmo di processing
    def icon(self):
        pixmap = QtGui.QPixmap()
        pixmap.loadFromData(QtCore.QByteArray.fromBase64(image_base64))
        icon = QIcon(pixmap)
        return icon
        
    def createInstance(self):
        return TransposeHTML()

    def name(self):
        """
        Returns the algorithm name, used for identifying the algorithm. This
        string should be fixed for the algorithm, and must not be localised.
        The name should be unique within each provider. Names should contain
        lowercase alphanumeric characters only and no spaces or other
        formatting characters.
        """
        return 'TransposeHTML'

    def displayName(self):
        """
        Returns the translated algorithm name, which should be used for any
        user-visible display of the algorithm name.
        """
        return self.tr('TransposeHTML')

    def group(self):
        """
        Returns the name of the group this algorithm belongs to. This string
        should be localised.
        """
        return self.tr('Korto19')

    def groupId(self):
        """
        Returns the unique ID of the group this algorithm belongs to. This
        string should be fixed for the algorithm, and must not be localised.
        The group id should be unique within each provider. Group id should
        contain lowercase alphanumeric characters only and no spaces or other
        formatting characters.
        """
        return 'Korto19'

    def shortHelpString(self):
        """
        Returns a localised short helper string for the algorithm. This string
        should provide a basic description about what the algorithm does and the
        parameters and outputs associated with it..
        """
        header = '''
            <img src="data:image/svg;base64,''' + str(image_base64,'utf-8') + ''' width="50" height="50" style="float:right">
        '''
        footer = '''
            <img src="data:image/svg;base64,''' + str(HFCQgis,'utf-8') + ''' width="100" height="80" style="float:right">
        '''
        return self.tr(header + "Create a dynamic HTML frame in composer with transposed select data fields\
                                <br>Optionally personal css file by modifying the one attached and save as css file\
                                <br>By default if present field alias is used\
                                <br><strong><mark style='color:red'>Input layer must by related to Atlas\
                                \n<strong><mark style='color:black'>Default css style\n\
                                \n<mark style='color:blue'>table.KortoTable {<br>border: 1px solid #1C6EA4;\
                                background-color: #EEEEEE;<br> width: 100%;text-align: left;border-collapse: collapse;}\
                                <br>td, table.blueTable th {border: 1px solid #AAAAAA; padding: 3px 2px;}\
                                <br>td{nfont-size: 13px;}\
                                <br>td.desc {font-size: 15px; font-weight: bold;}\
                                <br>tr:nth-child(even){background: #D0E4F5;}\
                                \n <a href='https://github.com/Korto19/TransposeHTML.git'>https://github.com/Korto19/TransposeHTML.git</a>" + footer)
   
    def flags(self):
        return super().flags() | QgsProcessingAlgorithm.FlagNoThreading
   
    def initAlgorithm(self, config=None):
        """
        Here we define the inputs and output of the algorithm, along
        with some other properties.
        """

        # We add the input vector features source. It can have any kind of
        # geometry.
        self.addParameter(
            QgsProcessingParameterFeatureSource(
                self.INPUT,
                self.tr('Input Layer for data'),
                [QgsProcessing.TypeMapLayer]
            )
        )

        self.addParameter(
            QgsProcessingParameterField(
                self.INPUT_F,
                self.tr('Select fields for Html frame'),
                allowMultiple = True,
                defaultToAllFields = True,
                parentLayerParameterName=self.INPUT
            )
        )

        self.addParameter(
            QgsProcessingParameterBoolean(
                self.INPUT_A,
                'Field alias default Yes/[N]',
                1
            )
        )

        self.addParameter(
            QgsProcessingParameterLayout(
                self.INPUT_L,
                self.tr('Select Atlas Layout where insert Html frame'),
            )
        )

        self.addParameter(
            QgsProcessingParameterFile(
                self.INPUT_C,
                'CSS file',
                behavior=QgsProcessingParameterFile.File, fileFilter='Css file (*.css)',
                optional = True
            )
        )

    def processAlgorithm(self, parameters, context, feedback):
        """
        Here is where the processing itself takes place.
        """

        # Retrieve the feature source and sink. The 'dest_id' variable is used
        # to uniquely identify the feature sink, and must be included in the
        # dictionary returned by the processAlgorithm function.
        source = self.parameterAsSource(
            parameters,
            self.INPUT,
            context
        )

        sourceF = self.parameterAsMatrix(
            parameters,
            self.INPUT_F,
            context)
            
        comp_layout = self.parameterAsString(
            parameters,
            self.INPUT_L,
            context)
        
        alias_v = self.parameterAsBool(
            parameters,
            self.INPUT_A,
            context)
    
        fogliocss = self.parameterAsString(
            parameters,
            self.INPUT_C,
            context)

        # If source was not found, throw an exception to indicate that the algorithm
        # encountered a fatal error. The exception text can be any string, but in this
        # case we use the pre-built invalidSourceError method to return a standard
        # helper text for when a source cannot be evaluated
        if source is None:
            raise QgsProcessingException(self.invalidSourceError(parameters, self.INPUT))
        
        features = source.getFeatures()
        
        HTML_string = '<table class="KortoTable"><tbody>'
        
        for field in source.fields():
            if field.name() in sourceF:
                if alias_v and len(field.alias())!= 0:
                    field_name = field.alias()
                else:
                    field_name = field.name()
                HTML_string = HTML_string + '<tr><td class="desc">'+ field_name + ': </td><td>[% "'+ field_name + '" %]<br></td></tr>'

        HTML_string = HTML_string + '</tbody></table>'
        
        
        if not fogliocss:
            user_css = '''table.KortoTable {
            border: 1px solid #1C6EA4;
            background-color: #EEEEEE;
            width: 100%;
            text-align: left;
            border-collapse: collapse;
            }
            td, table.blueTable th {
            border: 1px solid #AAAAAA;
            padding: 3px 2px;
            }
            td {
            font-size: 13px;
            }
            td.desc {
            font-size: 15px;
            font-weight: bold;
            }
            tr:nth-child(even) {
            background: #D0E4F5;
            }'''
        else:
            with open(fogliocss) as f:
                user_css = f.read()
            f.close()
        
        proj = QgsProject.instance()
        lmgr = proj.layoutManager()
        
        layout = lmgr.layoutByName(str(comp_layout))

        layout_html = QgsLayoutItemHtml(layout)
        
        html_frame = QgsLayoutFrame(layout, layout_html)
        html_frame.attemptSetSceneRect(QRectF(10, 10, 30, 20))
        html_frame.setFrameEnabled(True)
        html_frame.setFrameStrokeWidth(QgsLayoutMeasurement(0.1, QgsUnitTypes.LayoutMillimeters))
        
        layout_html.setUserStylesheetEnabled(True)
        layout_html.setUserStylesheet(user_css)
        layout_html.addFrame(html_frame)
        layout_html.setContentMode(QgsLayoutItemHtml.ManualHtml)
        layout_html.setHtml(HTML_string)
        layout_html.loadHtml()
        
        return{}